*-----------------------------------------------------------------------------** Graph real GDP in different downturns                                       **-----------------------------------------------------------------------------*#delimit ;version 10.1 ;cd "/Users/rwe2/Documents/BYU Economics/Data/rGDPrecessComp/" ;capture log close ;log using rGDPrecessComp, replace ;set more off ;clear ;set memory 20m ;*---------------------------------------------------------------------------- ;* Get data ;insheet datetextqtr rGDPqtr using GDPC962014-01.csv, comma names clear ;gen double rGDPqtr2 = rgdpqtr ;drop rgdpqtr ;rename rGDPqtr2 rGDPqtr ;label variable rGDPqtr "Real GDP (quarter)" ;label variable datetextqtr "Date (text format)" ;gen double dateqtr = date(datetextqtr,"MDY", 2014) ;label variable dateqtr "Date" ;format dateqtr %tdCCYY!-Mon!-DD ;order datetextqtr dateqtr rGDPqtr ;tsset dateqtr, daily ;sort dateqtr ;gen qtrdata = 1 ;tempfile rGDPqtrfile ;save `rGDPqtrfile', replace ;insheet datetextann rGDPann using GDPCA.txt, comma names clear ;gen double rGDPann2 = rgdpann ;drop rgdpann ;rename rGDPann2 rGDPann ;label variable rGDPann "Real GDP (annual)" ;label variable datetextann "Date (text format)" ;gen double dateann = date(datetextann,"YMD", 2008) ;label variable dateann "Date" ;format dateann %tdCCYY!-Mon!-DD ;order datetextann dateann rGDPann ;tsset dateann, daily ;sort dateann ;gen anndata = 1 ;append using `rGDPqtrfile' ;*---------------------------------------------------------------------------- ;* Generate some new variables ;gen int  yearann  = year(dateann) ;gen int  yearqtr  = year(dateqtr) ;gen byte monthann = month(dateann) ;gen byte monthqtr = month(dateqtr) ;gen byte quarterann = quarter(dateann) ;gen byte quarterqtr = quarter(dateqtr) ;label variable yearann "Year" ;label variable yearqtr "Year" ;label variable monthann "Month" ;label variable monthqtr "Month" ;label variable quarterann "Quarter" ;label variable quarterqtr "Quarter" ;generate periodann = _n if anndata == 1 ;generate periodqtr = _n if qtrdata == 1 ;*---------------------------------------------------------------------------- ;* Create normalized peak series for Recession 1, the Great Depression  (Aug 1929-March 1933) ;local recnum = 1 ;*graph twoway line rGDPann dateann if dateann >= mdy(8,1,1927) &   dateann <= mdy(3,31,1933) ;sum rGDPann if dateann >= mdy(8,1,1927) & dateann <= mdy(3,31,1933) ;local rec`recnum'max = r(max) ;display `rec`recnum'max' ;sum periodann if rGDPann == `rec`recnum'max' & dateann >= mdy(8,1,1927) &   dateann <= mdy(3,31,1933) ;local zero`recnum'per = r(min) ;display `zero`recnum'per' ;sum dateann if periodann == `zero`recnum'per' ;local zero`recnum'perdate = r(mean) ;local rec`recnum'firstperdate = `zero`recnum'perdate' - (365*2) ;local rec`recnum'lastperdate  = `zero`recnum'perdate' + (365*6) + 10 ;count if dateann >= `rec`recnum'firstperdate' & dateann <= `rec`recnum'lastperdate' ;local rec`recnum'pers = r(N) ;gen rGDPannrec`recnum' = rGDPann/`rec`recnum'max' if dateann >=   `rec`recnum'firstperdate' & dateann <= `rec`recnum'lastperdate' ;label variable rGDPannrec`recnum' "1929-1933" ;gen comprecper`recnum' =  dateann - `zero`recnum'perdate' if dateann >=   `rec`recnum'firstperdate' & dateann <= `rec`recnum'lastperdate' ;label variable comprecper`recnum' "Days from peak" ;*---------------------------------------------------------------------------- ;* Create normalized peak series for Recession 2 (May 1937-Jun 1938) ;local recnum = 2 ;*graph twoway line rGDPann dateann if dateann >= mdy(1,1,1936) &   dateann <= mdy(1,1,1938) ;sum rGDPann if dateann >= mdy(1,1,1936) & dateann <= mdy(1,1,1938) ;local rec`recnum'max = r(max) ;display `rec`recnum'max' ;sum periodann if rGDPann == `rec`recnum'max' & dateann >= mdy(1,1,1936) &   dateann <= mdy(1,1,1938) ;local zero`recnum'per = r(min) ;display `zero`recnum'per' ;sum dateann if periodann == `zero`recnum'per' ;local zero`recnum'perdate = r(mean) ;local rec`recnum'firstperdate = `zero`recnum'perdate' - (365*2) - 10 ;local rec`recnum'lastperdate  = `zero`recnum'perdate' + (365*6) + 10 ;count if dateann >= `rec`recnum'firstperdate' & dateann <= `rec`recnum'lastperdate' ;local rec`recnum'pers = r(N) ;gen rGDPannrec`recnum' = rGDPann/`rec`recnum'max' if dateann >=   `rec`recnum'firstperdate' & dateann <= `rec`recnum'lastperdate' ;label variable rGDPannrec`recnum' "1935-1941" ;gen comprecper`recnum' =  dateann - `zero`recnum'perdate' if dateann >=   `rec`recnum'firstperdate' & dateann <= `rec`recnum'lastperdate' ;label variable comprecper`recnum' "Days from peak" ;*---------------------------------------------------------------------------- ;* Create normalized peak series for Recession 3 (Feb 1945-Oct 1945) ;local recnum = 3 ;*graph twoway line rGDPann dateann if dateann >= mdy(1,1,1944) &   dateann <= mdy(4,1,1946) ;sum rGDPann if dateann >= mdy(1,1,1944) & dateann <= mdy(4,1,1945) ;local rec`recnum'max = r(max) ;display `rec`recnum'max' ;sum periodann if rGDPann == `rec`recnum'max' & dateann >= mdy(1,1,1944) &   dateann <= mdy(4,1,1945) ;local zero`recnum'per = r(min) ;display `zero`recnum'per' ;sum dateann if periodann == `zero`recnum'per' ;local zero`recnum'perdate = r(mean) ;local rec`recnum'firstperdate = `zero`recnum'perdate' - (365*2) - 10 ;local rec`recnum'lastperdate  = `zero`recnum'perdate' + (365*6) + 10 ;count if dateann >= `rec`recnum'firstperdate' & dateann <= `rec`recnum'lastperdate' ;local rec`recnum'pers = r(N) ;gen rGDPannrec`recnum' = rGDPann/`rec`recnum'max' if dateann >=   `rec`recnum'firstperdate' & dateann <= `rec`recnum'lastperdate' ;label variable rGDPannrec`recnum' "1943-1949" ;gen comprecper`recnum' =  dateann - `zero`recnum'perdate' if dateann >=   `rec`recnum'firstperdate' & dateann <= `rec`recnum'lastperdate' ;label variable comprecper`recnum' "Days from peak" ;*---------------------------------------------------------------------------- ;* Create normalized peak series for Recession 4 (Nov 1948-Oct 1949) ;local recnum = 4 ;*graph twoway line rGDPqtr dateqtr if dateqtr >= mdy(4,1,1948) &   dateqtr <= mdy(1,1,1949) ;sum rGDPqtr if dateqtr >= mdy(4,1,1948) & dateqtr <= mdy(1,1,1949) ;local rec`recnum'max = r(max) ;display `rec`recnum'max' ;sum periodqtr if rGDPqtr == `rec`recnum'max' & dateqtr >= mdy(5,1,1948) &   dateqtr <= mdy(1,1,1949) ;local zero`recnum'per = r(min) ;display `zero`recnum'per' ;sum dateqtr if periodqtr == `zero`recnum'per' ;local zero`recnum'perdate = r(mean) ;local rec`recnum'firstperdate = `zero`recnum'perdate' - (365*2) - 10 ;local rec`recnum'lastperdate  = `zero`recnum'perdate' + (365*6) + 10 ;count if dateqtr >= `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;local rec`recnum'pers = r(N) ;gen rGDPqtrrec`recnum' = rGDPqtr/`rec`recnum'max' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable rGDPqtrrec`recnum' "1946-1952" ;gen comprecper`recnum' =  dateqtr - `zero`recnum'perdate' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable comprecper`recnum' "Days from peak" ;*---------------------------------------------------------------------------- ;* Create normalized peak series for Recession 5 (Jul 1953-May 1954) ;local recnum = 5 ;*graph twoway line rGDPqtr dateqtr if dateqtr >= mdy(1,1,1953) &   dateqtr <= mdy(6,1,1954) ;sum rGDPqtr if dateqtr >= mdy(1,1,1953) & dateqtr <= mdy(6,1,1954) ;local rec`recnum'max = r(max) ;display `rec`recnum'max' ;sum periodqtr if rGDPqtr == `rec`recnum'max' & dateqtr >= mdy(1,1,1953) &   dateqtr <= mdy(6,1,1954) ;local zero`recnum'per = r(min) ;display `zero`recnum'per' ;sum dateqtr if periodqtr == `zero`recnum'per' ;local zero`recnum'perdate = r(mean) ;local rec`recnum'firstperdate = `zero`recnum'perdate' - (365*2) - 10 ;local rec`recnum'lastperdate  = `zero`recnum'perdate' + (365*6) + 10 ;count if dateqtr >= `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;local rec`recnum'pers = r(N) ;gen rGDPqtrrec`recnum' = rGDPqtr/`rec`recnum'max' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable rGDPqtrrec`recnum' "1951-1957" ;gen comprecper`recnum' =  dateqtr - `zero`recnum'perdate' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable comprecper`recnum' "Days from peak" ;*---------------------------------------------------------------------------- ;* Create normalized peak series for Recession 6 (Aug 1957-Apr 1958) ;local recnum = 6 ;*graph twoway line rGDPqtr dateqtr if dateqtr >= mdy(1,1,1957) &   dateqtr <= mdy(1,1,1958) ;sum rGDPqtr if dateqtr >= mdy(1,1,1957) & dateqtr <= mdy(1,1,1958) ;local rec`recnum'max = r(max) ;display `rec`recnum'max' ;sum periodqtr if rGDPqtr == `rec`recnum'max' & dateqtr >= mdy(1,1,1957) &   dateqtr <= mdy(1,1,1958) ;local zero`recnum'per = r(min) ;display `zero`recnum'per' ;sum dateqtr if periodqtr == `zero`recnum'per' ;local zero`recnum'perdate = r(mean) ;local rec`recnum'firstperdate = `zero`recnum'perdate' - (365*2) - 10 ;local rec`recnum'lastperdate  = `zero`recnum'perdate' + (365*6) + 10 ;count if dateqtr >= `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;local rec`recnum'pers = r(N) ;gen rGDPqtrrec`recnum' = rGDPqtr/`rec`recnum'max' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable rGDPqtrrec`recnum' "1955-1961" ;gen comprecper`recnum' =  dateqtr - `zero`recnum'perdate' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable comprecper`recnum' "Days from peak" ;*---------------------------------------------------------------------------- ;* Create normalized peak series for Recession 7 (Apr 1960-Feb 1961) ;local recnum = 7 ;*graph twoway line rGDPqtr dateqtr if dateqtr >= mdy(6,1,1959) &   dateqtr <= mdy(1,1,1961) ;sum rGDPqtr if dateqtr >= mdy(6,1,1959) & dateqtr <= mdy(1,1,1961) ;local rec`recnum'max = r(max) ;display `rec`recnum'max' ;sum periodqtr if rGDPqtr == `rec`recnum'max' & dateqtr >= mdy(6,1,1959) &   dateqtr <= mdy(1,1,1961) ;local zero`recnum'per = r(min) ;display `zero`recnum'per' ;sum dateqtr if periodqtr == `zero`recnum'per' ;local zero`recnum'perdate = r(mean) ;local rec`recnum'firstperdate = `zero`recnum'perdate' - (365*2) - 10 ;local rec`recnum'lastperdate  = `zero`recnum'perdate' + (365*6) + 10 ;count if dateqtr >= `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;local rec`recnum'pers = r(N) ;gen rGDPqtrrec`recnum' = rGDPqtr/`rec`recnum'max' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable rGDPqtrrec`recnum' "1958-1964" ;gen comprecper`recnum' =  dateqtr - `zero`recnum'perdate' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable comprecper`recnum' "Days from peak" ;*---------------------------------------------------------------------------- ;* Create normalized peak series for Recession 8 (Dec 1969-Nov 1970) ;local recnum = 8 ;*graph twoway line rGDPqtr dateqtr if dateqtr >= mdy(1,1,1969) &   dateqtr <= mdy(1,1,1970) ;sum rGDPqtr if dateqtr >= mdy(1,1,1969) & dateqtr <= mdy(1,1,1970) ;local rec`recnum'max = r(max) ;display `rec`recnum'max' ;sum periodqtr if rGDPqtr == `rec`recnum'max' & dateqtr >= mdy(1,1,1969) &   dateqtr <= mdy(1,1,1970) ;local zero`recnum'per = r(min) ;display `zero`recnum'per' ;sum dateqtr if periodqtr == `zero`recnum'per' ;local zero`recnum'perdate = r(mean) ;local rec`recnum'firstperdate = `zero`recnum'perdate' - (365*2) - 10 ;local rec`recnum'lastperdate  = `zero`recnum'perdate' + (365*6) + 10 ;count if dateqtr >= `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;local rec`recnum'pers = r(N) ;gen rGDPqtrrec`recnum' = rGDPqtr/`rec`recnum'max' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable rGDPqtrrec`recnum' "1967-1973" ;gen comprecper`recnum' =  dateqtr - `zero`recnum'perdate' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable comprecper`recnum' "Days from peak" ;*---------------------------------------------------------------------------- ;* Create normalized peak series for Recession 9 (Nov 1973-Mar 1975) ;local recnum = 9 ;*graph twoway line rGDPqtr dateqtr if dateqtr >= mdy(7,1,1973) &   dateqtr <= mdy(1,1,1974) ;sum rGDPqtr if dateqtr >= mdy(7,1,1973) & dateqtr <= mdy(1,1,1974) ;local rec`recnum'max = r(max) ;display `rec`recnum'max' ;sum periodqtr if rGDPqtr == `rec`recnum'max' & dateqtr >= mdy(7,1,1973) &   dateqtr <= mdy(1,1,1974) ;local zero`recnum'per = r(min) ;display `zero`recnum'per' ;sum dateqtr if periodqtr == `zero`recnum'per' ;local zero`recnum'perdate = r(mean) ;local rec`recnum'firstperdate = `zero`recnum'perdate' - (365*2) - 10 ;local rec`recnum'lastperdate  = `zero`recnum'perdate' + (365*6) + 10 ;count if dateqtr >= `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;local rec`recnum'pers = r(N) ;gen rGDPqtrrec`recnum' = rGDPqtr/`rec`recnum'max' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable rGDPqtrrec`recnum' "1971-1977" ;gen comprecper`recnum' =  dateqtr - `zero`recnum'perdate' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable comprecper`recnum' "Days from peak" ;*---------------------------------------------------------------------------- ;* Create normalized peak series for Recession 10 (Jan 1980-Jul 1980) ;local recnum = 10 ;*graph twoway line rGDPqtr dateqtr if dateqtr >= mdy(1,1,1979) &   dateqtr <= mdy(7,1,1980) ;sum rGDPqtr if dateqtr >= mdy(1,1,1979) & dateqtr <= mdy(7,1,1980) ;local rec`recnum'max = r(max) ;display `rec`recnum'max' ;sum periodqtr if rGDPqtr == `rec`recnum'max' & dateqtr >= mdy(1,1,1979) &   dateqtr <= mdy(7,1,1980) ;local zero`recnum'per = r(min) ;display `zero`recnum'per' ;sum dateqtr if periodqtr == `zero`recnum'per' ;local zero`recnum'perdate = r(mean) ;local rec`recnum'firstperdate = `zero`recnum'perdate' - (365*2) - 10 ;local rec`recnum'lastperdate  = `zero`recnum'perdate' + (365*6) + 10 ;count if dateqtr >= `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;local rec`recnum'pers = r(N) ;gen rGDPqtrrec`recnum' = rGDPqtr/`rec`recnum'max' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable rGDPqtrrec`recnum' "1978-1984" ;gen comprecper`recnum' =  dateqtr - `zero`recnum'perdate' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable comprecper`recnum' "Days from peak" ;*---------------------------------------------------------------------------- ;* Create normalized peak series for Recession 11 (Jul 1981-Nov1982) ;local recnum = 11 ;*graph twoway line rGDPqtr dateqtr if dateqtr >= mdy(1,1,1981) &   dateqtr <= mdy(1,1,1982) ;sum rGDPqtr if dateqtr >= mdy(1,1,1981) & dateqtr <= mdy(1,1,1982) ;local rec`recnum'max = r(max) ;display `rec`recnum'max' ;sum periodqtr if rGDPqtr == `rec`recnum'max' & dateqtr >= mdy(1,1,1981) &   dateqtr <= mdy(1,1,1982) ;local zero`recnum'per = r(min) ;display `zero`recnum'per' ;sum dateqtr if periodqtr == `zero`recnum'per' ;local zero`recnum'perdate = r(mean) ;local rec`recnum'firstperdate = `zero`recnum'perdate' - (365*2) - 10 ;local rec`recnum'lastperdate  = `zero`recnum'perdate' + (365*6) + 10 ;count if dateqtr >= `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;local rec`recnum'pers = r(N) ;gen rGDPqtrrec`recnum' = rGDPqtr/`rec`recnum'max' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable rGDPqtrrec`recnum' "1979-1985" ;gen comprecper`recnum' =  dateqtr - `zero`recnum'perdate' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable comprecper`recnum' "Days from peak" ;*---------------------------------------------------------------------------- ;* Create normalized peak series for Recession 12 (Jul 1990-Mar 1991) ;local recnum = 12 ;*graph twoway line rGDPqtr dateqtr if dateqtr >= mdy(1,1,1989) &   dateqtr <= mdy(1,1,1991) ;sum rGDPqtr if dateqtr >= mdy(1,1,1989) & dateqtr <= mdy(1,1,1991) ;local rec`recnum'max = r(max) ;display `rec`recnum'max' ;sum periodqtr if rGDPqtr == `rec`recnum'max' & dateqtr >= mdy(1,1,1989) &   dateqtr <= mdy(1,1,1991) ;local zero`recnum'per = r(min) ;display `zero`recnum'per' ;sum dateqtr if periodqtr == `zero`recnum'per' ;local zero`recnum'perdate = r(mean) ;local rec`recnum'firstperdate = `zero`recnum'perdate' - (365*2) - 10 ;local rec`recnum'lastperdate  = `zero`recnum'perdate' + (365*6) + 10 ;count if dateqtr >= `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;local rec`recnum'pers = r(N) ;gen rGDPqtrrec`recnum' = rGDPqtr/`rec`recnum'max' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable rGDPqtrrec`recnum' "1989-1995" ;gen comprecper`recnum' =  dateqtr - `zero`recnum'perdate' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable comprecper`recnum' "Days from peak" ;*---------------------------------------------------------------------------- ;* Create normalized peak series for Recession 13 (Mar 2001-Nov 2001) ;local recnum = 13 ;*graph twoway line rGDPqtr dateqtr if dateqtr >= mdy(1,1,2001) &   dateqtr <= mdy(7,1,2001) ;sum rGDPqtr if dateqtr >= mdy(1,1,2001) & dateqtr <= mdy(7,1,2001) ;local rec`recnum'max = r(max) ;display `rec`recnum'max' ;sum periodqtr if rGDPqtr == `rec`recnum'max' & dateqtr >= mdy(1,1,2001) &   dateqtr <= mdy(7,1,2001) ;local zero`recnum'per = r(min) ;display `zero`recnum'per' ;sum dateqtr if periodqtr == `zero`recnum'per' ;local zero`recnum'perdate = r(mean) ;local rec`recnum'firstperdate = `zero`recnum'perdate' - (365*2) - 10 ;local rec`recnum'lastperdate  = `zero`recnum'perdate' + (365*6) + 10 ;count if dateqtr >= `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;local rec`recnum'pers = r(N) ;gen rGDPqtrrec`recnum' = rGDPqtr/`rec`recnum'max' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable rGDPqtrrec`recnum' "1997-2003" ;gen comprecper`recnum' =  dateqtr - `zero`recnum'perdate' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable comprecper`recnum' "Days from peak" ;*---------------------------------------------------------------------------- ;* Create normalized peak series for Recession 14 (Dec 2007-present [June 2009]) ;local recnum = 14 ;*graph twoway line rGDPqtr dateqtr if dateqtr >= mdy(12,1,2005) &   dateqtr <= mdy(7,31,20011) ;sum rGDPqtr if dateqtr >= mdy(12,1,2005) & dateqtr <= mdy(7,31,2009) ;local rec`recnum'max = r(max) ;display `rec`recnum'max' ;sum periodqtr if rGDPqtr == `rec`recnum'max' & dateqtr >= mdy(12,1,2005) &   dateqtr <= mdy(7,31,2009) ;local zero`recnum'per = r(min) ;display `zero`recnum'per' ;sum dateqtr if periodqtr == `zero`recnum'per' ;local zero`recnum'perdate = r(mean) ;local rec`recnum'firstperdate = `zero`recnum'perdate' - (365*2) - 10 ;local rec`recnum'lastperdate  = `zero`recnum'perdate' + (365*6) + 10 ;*count ;*local newobs = r(N) + 1 ;*set obs `newobs' ;*replace dateqtr = `rec`recnum'lastperdate' if _n == `newobs' ;count if dateqtr >= `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;local rec`recnum'pers = r(N) ;gen rGDPqtrrec`recnum' = rGDPqtr/`rec`recnum'max' if dateqtr >=   `rec`recnum'firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable rGDPqtrrec`recnum' "2005-2009" ;gen comprecper`recnum' =  dateqtr - `zero`recnum'perdate' if dateqtr >=   `rec14firstperdate' & dateqtr <= `rec`recnum'lastperdate' ;label variable comprecper`recnum' "Days from peak" ;save rGDPrecessComp, replace ;*---------------------------------------------------------------------------- ;* Create normalized peak plot of DJIA for all recessions since the Great  Depression ;graph twoway   (line rGDPannrec1  comprecper1  if dateann >= `rec1firstperdate'  &   dateann <= `rec1lastperdate', lwidth(vthick) lcolor(black))   (line rGDPannrec2  comprecper2  if dateann >= `rec2firstperdate'  &   dateann <= `rec2lastperdate')   (line rGDPannrec3  comprecper3  if dateann >= `rec3firstperdate'  &   dateann <= `rec3lastperdate')   (line rGDPqtrrec4  comprecper4  if dateqtr >= `rec4firstperdate'  &   dateqtr <= `rec4lastperdate')   (line rGDPqtrrec5  comprecper5  if dateqtr >= `rec5firstperdate'  &   dateqtr <= `rec5lastperdate')   (line rGDPqtrrec6  comprecper6  if dateqtr >= `rec6firstperdate'  &   dateqtr <= `rec6lastperdate')   (line rGDPqtrrec7  comprecper7  if dateqtr >= `rec7firstperdate'  &   dateqtr <= `rec7lastperdate')   (line rGDPqtrrec8  comprecper8  if dateqtr >= `rec8firstperdate'  &   dateqtr <= `rec8lastperdate')   (line rGDPqtrrec9  comprecper9  if dateqtr >= `rec9firstperdate'  &   dateqtr <= `rec9lastperdate')   (line rGDPqtrrec10 comprecper10 if dateqtr >= `rec10firstperdate' &   dateqtr <= `rec10lastperdate')   (line rGDPqtrrec11 comprecper11 if dateqtr >= `rec11firstperdate' &   dateqtr <= `rec11lastperdate')   (line rGDPqtrrec12 comprecper12 if dateqtr >= `rec12firstperdate' &   dateqtr <= `rec12lastperdate')   (line rGDPqtrrec13 comprecper13 if dateqtr >= `rec13firstperdate' &   dateqtr <= `rec13lastperdate')   (line rGDPqtrrec14 comprecper14 if dateqtr >= `rec14firstperdate' &   dateqtr <= `rec14lastperdate', lwidth(vthick) lcolor(lime)),   title("Normalized Peak Plot") subtitle("Real GDP during last 14 recessions")   xline(0,lcolor(black) lpattern(dash)) yline(1,lcolor(black) lpattern(dash))   ytitle("real GDP/Peak") ylabel(0.70 0.85 1.00 1.15 1.30)   xtitle("Time from peak") xlabel(-729 "-2yr" -365 "-1yr" 0 "0" 365 "+1yr"   730 "+2yr" 1095 "+3yr" 1460 "+4yr" 1825 "+5yr" 2190 "+6yr")   legend(cols(1) position(3) symxsize(5) keygap(1) size(small) width(25))   note("Source: Econosseur.com, Federal Reserve Bank of St. Louis FRED data, BEA") ;graph save rGDPrecessCompGraph14-01, replace ;graph export rGDPrecessCompGraph14-01.pdf, replace ;graph export rGDPrecessCompGraph14-01.png, replace ;*---------------------------------------------------------------------------- ;* Closing commands ;log close ;exit ;